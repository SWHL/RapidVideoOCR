<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RapidVideOCR Documentation</title>
    <link>https://swhl.github.io/RapidVideOCR/</link>
    <description>Recent content on RapidVideOCR Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://swhl.github.io/RapidVideOCR/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>概览</title>
      <link>https://swhl.github.io/RapidVideOCR/docs/overview/</link>
      <pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swhl.github.io/RapidVideOCR/docs/overview/</guid>
      <description> &amp;nbsp; 简介 link 视频硬字幕提取，自动生成对应srt | txt文件。 支持字幕语言：中文 | 英文 （其他可以支持的语言参见：支持语种列表) 优势如下： 提取更快：与VideoSubFinder软件结合使用，提取关键字幕帧更快。 识别更准：采用RapidOCR作为识别库。 使用更方便：pip直接安装即可使用。 如果有帮助到您的话，请给个小星星⭐。 整体框架 linkflowchart LR A[/Video/] --Extract subtitle key frame--&amp;gt; B(VideoSubFinder) --OCR--&amp;gt;C(RapidVideOCR) C --Convert--&amp;gt; D[/&amp;#34;SRT | TXT&amp;#34;/] </description>
    </item>
    
    <item>
      <title>快速开始</title>
      <link>https://swhl.github.io/RapidVideOCR/docs/quickstart/</link>
      <pubDate>Wed, 10 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swhl.github.io/RapidVideOCR/docs/quickstart/</guid>
      <description> notifications 该库的输入必须是来自VideoSubFinder软件输出的RGBImagers或者TXTImages目录的路径。VideoSubFinder教程：link
1. 安装 link pip install rapid_videocr 2. 使用 link 终端使用 Python使用 rapid_videocr -i test_files/RGBImages from rapid_videocr import RapidVideOCR extractor = RapidVideOCR(is_concat_rec=False, out_format=&amp;#39;all&amp;#39;, is_print_console=False) rgb_dir = &amp;#39;test_files/RGBImages&amp;#39; save_dir = &amp;#39;result&amp;#39; extractor(rgb_dir, save_dir) </description>
    </item>
    
    <item>
      <title>在线demo</title>
      <link>https://swhl.github.io/RapidVideOCR/docs/online_demo/</link>
      <pubDate>Mon, 15 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swhl.github.io/RapidVideOCR/docs/online_demo/</guid>
      <description>简介 link Hugging Face上的Demo和魔搭Demo是同一套代码，都是基于streamlit搭建而来的。 两者区别在于，魔搭是国内平台，不需要科学上网即可访问使用；Hugging Face则需要科学上网。 搭建demo的目的在于： 快速查看提取字幕效果 Demo源码 link Hugging Face Demo: https://huggingface.co/spaces/SWHL/RapidVideOCR/tree/main 魔搭社区: https://www.modelscope.cn/studios/liekkas/RapidVideOCR/files 在线Demo link Hugging Face Demo: https://huggingface.co/spaces/SWHL/RapidVideOCR 魔搭社区: https://www.modelscope.cn/studios/liekkas/RapidVideOCR/summary </description>
    </item>
    
    <item>
      <title>初级教程（界面版 下载解压使用）</title>
      <link>https://swhl.github.io/RapidVideOCR/docs/tutorial/beginner/</link>
      <pubDate>Sun, 08 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://swhl.github.io/RapidVideOCR/docs/tutorial/beginner/</guid>
      <description>引言 link 考虑到提取视频字幕的小伙伴大多不是程序员行当，为了降低使用门槛，特此推出界面版的RapidVideOCR Desktop. RapidVideOCR Desktop需要搭配VideoSubFinder使用。它们两个关系如下图所示： flowchart LRA(VideoSubFinder) --提取字幕关键帧--&amp;gt; B(RapidVideOCR) --OCR--&amp;gt; C(SRT) VideoSubFinder使用教程 linkRapidVideOCR Desktop使用教程 link 下载对应平台的RapidVideOCR Desktop压缩包
Github下载 QQ群共享文件下载，QQ群号：706807542， 或者扫码加入： 解压zip包，双击RapidVideOCR.exe（以Windows平台为例）
界面如下图所示：
界面各个部分介绍
RapidVideOCR: 图像目录：指的是VideoSubFinder软件生成的RGBImages或者TXTImages目录，必须是这两个目录之一 保存路径：识别转换后的结果，包括srt文件和txt文件 叠图识别：勾选后，识别速度会变快。准确率可能差些 VideoSubFinder + RapidVideOCR: VSF exe路径：本地安装的VideoSubFinder全路径，例如:G:\ProgramFiles\VideoSubFinder_6.10_x64\Release_x64\VideoSubFinderWXW.exe 视频目录：想要提取硬字幕的视频所在目录 保存路径：保存提取结果的目录 上述都填好之后，点击OK按钮，即可开始识别。</description>
    </item>
    
    <item>
      <title>中级教程（python小白）</title>
      <link>https://swhl.github.io/RapidVideOCR/docs/tutorial/intermediate/</link>
      <pubDate>Sun, 08 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://swhl.github.io/RapidVideOCR/docs/tutorial/intermediate/</guid>
      <description>引言 link 本篇文章旨在帮助不会python编程的小伙伴，快速使用RapidVideOCR视频硬字幕提取工具。 可以运行的操作系统: `Windows | Mac | Linux`` 配置环境 link1. 安装VideoSubFinder软件（用于提取字幕关键帧） link [RapidVideOCR周边] VideoSubFinder提取字幕关键帧教程 2. 安装python软件（用于运行RapidVideOCR） link info 声明：以下部分图像来自终极保姆教程之安装python的教程_3.10.7版本
1. 下载python安装包 link打开python官网 → https://www.python.org，选择自己系统进入下载界面（VideoSubFinder工具目前只有Windows的）
2. 找到自己想要的版本， link以python 3.10.7 为例。如果网速下载较慢的话，可以加入RapidVideOCR QQ群（706807542），群文件获取。
3. 下载完成之后，双击打开这个exe，即可开始准备安装。 link点击自定义安装，选择安装位置。同时，记得勾选最后一项Add Python 3.10 to PATH
4. 直接点击下一步 link5. 勾选改路径 link6. 点击Install，等待安装完毕即可。 link7. Win + r 输入cmd，回车，进入命令窗口 link8. 输入python，看是否出现类似下图样子，如出现，证明安装成功 link9. 添加Scripts目录到环境变量中 link Win + q 输入“编辑” → 点击编辑系统环境变量
打开环境变量 → 用户变量 → Path → 编辑</description>
    </item>
    
    <item>
      <title>高级教程（有python基础的小伙伴）</title>
      <link>https://swhl.github.io/RapidVideOCR/docs/tutorial/senior/</link>
      <pubDate>Sun, 08 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://swhl.github.io/RapidVideOCR/docs/tutorial/senior/</guid>
      <description>1. 安装使用VideoSubFinder软件 link 下载地址：Windows &amp;amp; Linux (videosubfinder官网 / QQ群（706807542）共享文件) | Mac版 使用教程：VideoSubFinder提取字幕关键帧教程 最终生成的RGBImages和TXTImages目录一般会在软件安装目录下 ✧ 推荐用RGBImages目录中图像（感谢小伙伴dyphire在#21的反馈） 2. 安装rapid_videocr link pip install rapid_videocr 3. Python使用 link Only OCR Extract &amp;#43; OCR from rapid_videocr import RapidVideOCR# RapidVideOCR有两个初始化参数# is_concat_rec: 是否用单张图识别，默认是False，也就是默认用单图识别# concat_batch: 叠图识别的图像张数，默认10，可自行调节# out_format: 输出格式选择，[srt, txt, all], 默认是 all# is_print_console: 是否打印结果，[0, 1], 默认是0，不打印extractor = RapidVideOCR(is_concat_rec=False,out_format=&amp;#39;all&amp;#39;,is_print_console=False)# Windows端，需要这样写： rgb_dir = r&amp;#39;G:\ProgramFiles\_self\RapidVideOCR\test_files\RGBImages&amp;#39;# Linux / Mac 下面这样写rgb_dir = &amp;#39;test_files/TXTImages&amp;#39;save_dir = &amp;#39;result&amp;#39;extractor(rgb_dir, save_dir) from rapid_videocr import RapidVideoSubFinderOCRvsf_exe = r&amp;#34;G:\ProgramFiles\VideoSubFinder_6.</description>
    </item>
    
    <item>
      <title>如何识别除中英文以外的其他字幕语言？</title>
      <link>https://swhl.github.io/RapidVideOCR/docs/blog/-rec_other_lan/</link>
      <pubDate>Sun, 08 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://swhl.github.io/RapidVideOCR/docs/blog/-rec_other_lan/</guid>
      <description>引言 link 当前，RapidVideOCR是直接使用的rapidocr_onnxruntime的默认配置，因此仅能识别中英文的字幕文字。 由于rapidocr_onnxruntime具备传入其他多语言识别模型的接口，因此RapidVieOCR具备了可扩展性，本篇文章特此来说明如何操作使用。 本篇文章以discussions #40中提出的识别法语字幕为例说明，其他语种同理可得。 1. 正确安装使用RapidVideOCR link请参考link
2. 借助PaddleOCRConvert工具来转换法语识别模型为ONNX link notifications 参考教程link
其中，
模型路径：https://paddleocr.bj.bcebos.com/dygraph_v2.0/multilingual/french_mobile_v2.0_rec_infer.tar， 字典路径：https://raw.githubusercontent.com/PaddlePaddle/PaddleOCR/dygraph/ppocr/utils/dict/french_dict.txt 其他语言的模型下载地址参见：paddleocr whl源码中paddleocr.py文件中
字典链接参见：link
最终可以得到一个法语识别模型：french_mobile_v2.0_rec_infer.onnx
3. 识别法语字幕 link info rapid_videocr&amp;gt;=v2.2.8 from rapid_videocr import RapidVideOCRextractor = RapidVideOCR(rec_model_path=&amp;#34;french_mobile_v2.0_rec_infer.onnx&amp;#34;)rgb_dir = &amp;#34;test_files/RGBImagesTiny&amp;#34;save_dir = &amp;#34;outputs&amp;#34;save_name = &amp;#34;a&amp;#34;# outputs/a.srt outputs/a.txtextractor(rgb_dir, save_dir, save_name=save_name) </description>
    </item>
    
    <item>
      <title>给作者加油</title>
      <link>https://swhl.github.io/RapidVideOCR/docs/sponsor/</link>
      <pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swhl.github.io/RapidVideOCR/docs/sponsor/</guid>
      <description>写在前面 linkI like open source and AI technology because I think open source and AI will bring convenience and help to people in need, and will also make the world a better place. By donating to these projects, you can join me in making AI bring warmth and beauty to more people.
我喜欢开源，喜欢AI技术，因为我认为开源和AI会为有需要的人带来方便和帮助，也会让这个世界变得更好。通过对这些项目的捐赠，您可以和我一道让AI为更多人带来温暖和美好。
知识星球RapidAI私享群 link这里的提问会优先得到回答和支持，也会享受到RapidAI组织后续持续优质的服务，欢迎大家的加入。
支付宝或微信打赏 (Alipay reward or WeChat reward) link通过支付宝或者微信给作者打赏，请写好备注。 Give the author a reward through Alipay or WeChat.</description>
    </item>
    
    <item>
      <title>常见问题</title>
      <link>https://swhl.github.io/RapidVideOCR/docs/faq/</link>
      <pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swhl.github.io/RapidVideOCR/docs/faq/</guid>
      <description>Q: 装完环境之后，运行python main.py之后，报错OSError: [WinError 126] 找不到指定的模組 linkA: 原因是Shapely库没有正确安装，如果是在Windows，可以在Shapely whl下载对应的whl包，离线安装即可；另外一种解决办法是用conda安装也可。(@hongyuntw)</description>
    </item>
    
    <item>
      <title>更新日志</title>
      <link>https://swhl.github.io/RapidVideOCR/docs/changelog/</link>
      <pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://swhl.github.io/RapidVideOCR/docs/changelog/</guid>
      <description>🚩2023-10-08 v2.2.8 update: link 适配rapidocr_onnxruntime的相关参数，可以通过RapidVideOCR类传入，从而更加灵活指定不同语言的模型。 ♦ 2023-08-05 v2.2.4 update: link 修复批量识别模式下，索引错误。 添加日志记录模块，便于使用桌面版，快速记录问题，便于反馈。 🛶2023-07-19 v2.2.3 update: link 增加对VSF的参数的适配，命令行模式和类初始化时，可以指定VSF命令的同名参数。详细使用参见link 🤓2023-07-08 v2.2.2 update: link 修复批量识别时，不能读取中文路径的问题 修复漏轴时，SRT中跳过问题。目前当出现某一轴未能识别，则会空出位置，便于校对。 保留VSF识别的中间结果 🐲2023-06-22 v2.2.0 update: link 该版本是向v2.1.x兼容的，也就是之前用法依然可以。 将VSF的CLI整合到库中，只需指定VideoSubFinderWXW.exe的全路径即可。 增加批量识别功能，指定视频目录，即可自动提取目录下所有视频字幕 使用示例, 参见：demo.py 😀2023-05-12 v2.1.7 update: link 优化代码 添加save_name参数，可以灵活指定保存的srt | txt文件名称，默认是result 🐱2023-03-27 v2.1.6 update: link 修复时间轴对不齐问题，详情参见issue 23 👽2023-03-23 v2.1.5 update: link 添加打印到屏幕的控制参数is_print_console 调整out_format参数位置到初始化类时 😀2023-03-14 v2.1.3 update: link 修复输入TXTImages目录且叠字识别时错误 😜2023-03-12 v2.1.2 update: link 修复索引错误，#22 🎢2023-03-11 v2.1.1 update: link 修复单图识别与之前版本差异问题 默认识别模式更改为单图识别，是否使用叠图识别，请自行决定 🥇2023-03-10 v2.</description>
    </item>
    
  </channel>
</rss>
